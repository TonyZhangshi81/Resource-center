#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieResources
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MRData")]
	public partial class MR_DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Inserttbl_Album(tbl_Album instance);
    partial void Updatetbl_Album(tbl_Album instance);
    partial void Deletetbl_Album(tbl_Album instance);
    partial void Inserttbl_Ask(tbl_Ask instance);
    partial void Updatetbl_Ask(tbl_Ask instance);
    partial void Deletetbl_Ask(tbl_Ask instance);
    partial void Inserttbl_Celebrity(tbl_Celebrity instance);
    partial void Updatetbl_Celebrity(tbl_Celebrity instance);
    partial void Deletetbl_Celebrity(tbl_Celebrity instance);
    partial void Inserttbl_Comment(tbl_Comment instance);
    partial void Updatetbl_Comment(tbl_Comment instance);
    partial void Deletetbl_Comment(tbl_Comment instance);
    partial void Inserttbl_Country(tbl_Country instance);
    partial void Updatetbl_Country(tbl_Country instance);
    partial void Deletetbl_Country(tbl_Country instance);
    partial void Inserttbl_Discovery(tbl_Discovery instance);
    partial void Updatetbl_Discovery(tbl_Discovery instance);
    partial void Deletetbl_Discovery(tbl_Discovery instance);
    partial void Inserttbl_GenreMovie(tbl_GenreMovie instance);
    partial void Updatetbl_GenreMovie(tbl_GenreMovie instance);
    partial void Deletetbl_GenreMovie(tbl_GenreMovie instance);
    partial void Inserttbl_Language(tbl_Language instance);
    partial void Updatetbl_Language(tbl_Language instance);
    partial void Deletetbl_Language(tbl_Language instance);
    partial void Inserttbl_Movie(tbl_Movie instance);
    partial void Updatetbl_Movie(tbl_Movie instance);
    partial void Deletetbl_Movie(tbl_Movie instance);
    partial void Inserttbl_Notice(tbl_Notice instance);
    partial void Updatetbl_Notice(tbl_Notice instance);
    partial void Deletetbl_Notice(tbl_Notice instance);
    partial void Inserttbl_Resource(tbl_Resource instance);
    partial void Updatetbl_Resource(tbl_Resource instance);
    partial void Deletetbl_Resource(tbl_Resource instance);
    partial void Inserttbl_UserAccount(tbl_UserAccount instance);
    partial void Updatetbl_UserAccount(tbl_UserAccount instance);
    partial void Deletetbl_UserAccount(tbl_UserAccount instance);
    partial void Inserttbl_Work(tbl_Work instance);
    partial void Updatetbl_Work(tbl_Work instance);
    partial void Deletetbl_Work(tbl_Work instance);
    partial void Inserttbl_Mark(tbl_Mark instance);
    partial void Updatetbl_Mark(tbl_Mark instance);
    partial void Deletetbl_Mark(tbl_Mark instance);
    #endregion
		
		public MR_DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MRDataConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MR_DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MR_DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MR_DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MR_DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Album> tbl_Album
		{
			get
			{
				return this.GetTable<tbl_Album>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Ask> tbl_Ask
		{
			get
			{
				return this.GetTable<tbl_Ask>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Celebrity> tbl_Celebrity
		{
			get
			{
				return this.GetTable<tbl_Celebrity>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Comment> tbl_Comment
		{
			get
			{
				return this.GetTable<tbl_Comment>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Country> tbl_Country
		{
			get
			{
				return this.GetTable<tbl_Country>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Discovery> tbl_Discovery
		{
			get
			{
				return this.GetTable<tbl_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<tbl_GenreMovie> tbl_GenreMovie
		{
			get
			{
				return this.GetTable<tbl_GenreMovie>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Language> tbl_Language
		{
			get
			{
				return this.GetTable<tbl_Language>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Movie> tbl_Movie
		{
			get
			{
				return this.GetTable<tbl_Movie>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Notice> tbl_Notice
		{
			get
			{
				return this.GetTable<tbl_Notice>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Resource> tbl_Resource
		{
			get
			{
				return this.GetTable<tbl_Resource>();
			}
		}
		
		public System.Data.Linq.Table<tbl_UserAccount> tbl_UserAccount
		{
			get
			{
				return this.GetTable<tbl_UserAccount>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Work> tbl_Work
		{
			get
			{
				return this.GetTable<tbl_Work>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Mark> tbl_Mark
		{
			get
			{
				return this.GetTable<tbl_Mark>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlterAlbumAlterTime")]
		public int AlterAlbumAlterTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ALBUMID", DbType="VarChar(50)")] string aLBUMID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aLBUMID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlterCelebAlterTime")]
		public int AlterCelebAlterTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CELEBID", DbType="VarChar(50)")] string cELEBID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cELEBID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlterMovieAlterTime")]
		public int AlterMovieAlterTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MOVIEID", DbType="VarChar(50)")] string mOVIEID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mOVIEID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlterUserAlterTime")]
		public int AlterUserAlterTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="USERID", DbType="VarChar(50)")] string uSERID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uSERID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCountry")]
		public int InsertCountry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="COUNTRYNAME", DbType="NVarChar(50)")] string cOUNTRYNAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cOUNTRYNAME);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertGenre")]
		public int InsertGenre([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GENRENAME", DbType="NVarChar(50)")] string gENRENAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gENRENAME);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertLang")]
		public int InsertLang([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LANGNAME", DbType="NVarChar(50)")] string lANGNAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lANGNAME);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetAlbumTime")]
		public int SetAlbumTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ALBUMID", DbType="VarChar(50)")] string aLBUMID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aLBUMID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetAskTime")]
		public int SetAskTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ASKID", DbType="VarChar(50)")] string aSKID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aSKID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetCelebTime")]
		public int SetCelebTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CELEBID", DbType="VarChar(50)")] string cELEBID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cELEBID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetMarkCelebTime")]
		public int SetMarkCelebTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MARKID", DbType="VarChar(50)")] string mARKID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mARKID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetMarkMovieTime")]
		public int SetMarkMovieTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MARKID", DbType="VarChar(50)")] string mARKID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mARKID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetMovieTime")]
		public int SetMovieTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MOVIEID", DbType="VarChar(50)")] string mOVIEID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mOVIEID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetResTime")]
		public int SetResTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RESID", DbType="VarChar(50)")] string rESID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rESID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetUserTime")]
		public int SetUserTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="USERID", DbType="VarChar(50)")] string uSERID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uSERID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetWithTime")]
		public int SetWithTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="WITHID", DbType="VarChar(50)")] string wITHID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), wITHID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCelebWork")]
		public int UpdateCelebWork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CelebId", DbType="VarChar(50)")] string celebId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), celebId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateMovieCeleb")]
		public int UpdateMovieCeleb([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MovieId", DbType="VarChar(50)")] string movieId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CelebType", DbType="TinyInt")] System.Nullable<byte> celebType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), movieId, celebType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetFavorTime")]
		public int SetFavorTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FAVORID", DbType="VarChar(50)")] string fAVORID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fAVORID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetFollowTime")]
		public int SetFollowTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FOLLOWID", DbType="VarChar(50)")] string fOLLOWID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fOLLOWID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlterFavorCount")]
		public int AlterFavorCount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResId", DbType="VarChar(50)")] string resId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetDiscTime")]
		public int SetDiscTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DISCID", DbType="VarChar(50)")] string dISCID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dISCID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetCmtTime")]
		public int SetCmtTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CMTID", DbType="VarChar(50)")] string cMTID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cMTID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Album")]
	public partial class tbl_Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _album_Id;
		
		private string _album_Title;
		
		private string _album_User;
		
		private string _album_Item;
		
		private string _album_Summary;
		
		private System.Nullable<System.DateTime> _album_Time;
		
		private System.Nullable<System.DateTime> _album_AlterTime;
		
		private string _album_Cover;
		
		private System.Nullable<int> _album_Visit;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onalbum_IdChanging(string value);
    partial void Onalbum_IdChanged();
    partial void Onalbum_TitleChanging(string value);
    partial void Onalbum_TitleChanged();
    partial void Onalbum_UserChanging(string value);
    partial void Onalbum_UserChanged();
    partial void Onalbum_ItemChanging(string value);
    partial void Onalbum_ItemChanged();
    partial void Onalbum_SummaryChanging(string value);
    partial void Onalbum_SummaryChanged();
    partial void Onalbum_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onalbum_TimeChanged();
    partial void Onalbum_AlterTimeChanging(System.Nullable<System.DateTime> value);
    partial void Onalbum_AlterTimeChanged();
    partial void Onalbum_CoverChanging(string value);
    partial void Onalbum_CoverChanged();
    partial void Onalbum_VisitChanging(System.Nullable<int> value);
    partial void Onalbum_VisitChanged();
    #endregion
		
		public tbl_Album()
		{
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string album_Id
		{
			get
			{
				return this._album_Id;
			}
			set
			{
				if ((this._album_Id != value))
				{
					this.Onalbum_IdChanging(value);
					this.SendPropertyChanging();
					this._album_Id = value;
					this.SendPropertyChanged("album_Id");
					this.Onalbum_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string album_Title
		{
			get
			{
				return this._album_Title;
			}
			set
			{
				if ((this._album_Title != value))
				{
					this.Onalbum_TitleChanging(value);
					this.SendPropertyChanging();
					this._album_Title = value;
					this.SendPropertyChanged("album_Title");
					this.Onalbum_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_User", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string album_User
		{
			get
			{
				return this._album_User;
			}
			set
			{
				if ((this._album_User != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onalbum_UserChanging(value);
					this.SendPropertyChanging();
					this._album_User = value;
					this.SendPropertyChanged("album_User");
					this.Onalbum_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Item", DbType="NVarChar(MAX)")]
		public string album_Item
		{
			get
			{
				return this._album_Item;
			}
			set
			{
				if ((this._album_Item != value))
				{
					this.Onalbum_ItemChanging(value);
					this.SendPropertyChanging();
					this._album_Item = value;
					this.SendPropertyChanged("album_Item");
					this.Onalbum_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Summary", DbType="NVarChar(MAX)")]
		public string album_Summary
		{
			get
			{
				return this._album_Summary;
			}
			set
			{
				if ((this._album_Summary != value))
				{
					this.Onalbum_SummaryChanging(value);
					this.SendPropertyChanging();
					this._album_Summary = value;
					this.SendPropertyChanged("album_Summary");
					this.Onalbum_SummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> album_Time
		{
			get
			{
				return this._album_Time;
			}
			set
			{
				if ((this._album_Time != value))
				{
					this.Onalbum_TimeChanging(value);
					this.SendPropertyChanging();
					this._album_Time = value;
					this.SendPropertyChanged("album_Time");
					this.Onalbum_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_AlterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> album_AlterTime
		{
			get
			{
				return this._album_AlterTime;
			}
			set
			{
				if ((this._album_AlterTime != value))
				{
					this.Onalbum_AlterTimeChanging(value);
					this.SendPropertyChanging();
					this._album_AlterTime = value;
					this.SendPropertyChanged("album_AlterTime");
					this.Onalbum_AlterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Cover", DbType="NVarChar(100)")]
		public string album_Cover
		{
			get
			{
				return this._album_Cover;
			}
			set
			{
				if ((this._album_Cover != value))
				{
					this.Onalbum_CoverChanging(value);
					this.SendPropertyChanging();
					this._album_Cover = value;
					this.SendPropertyChanged("album_Cover");
					this.Onalbum_CoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_Visit", DbType="Int")]
		public System.Nullable<int> album_Visit
		{
			get
			{
				return this._album_Visit;
			}
			set
			{
				if ((this._album_Visit != value))
				{
					this.Onalbum_VisitChanging(value);
					this.SendPropertyChanging();
					this._album_Visit = value;
					this.SendPropertyChanged("album_Visit");
					this.Onalbum_VisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Album", Storage="_tbl_UserAccount", ThisKey="album_User", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Album.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Album.Add(this);
						this._album_User = value.user_Id;
					}
					else
					{
						this._album_User = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Ask")]
	public partial class tbl_Ask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ask_Id;
		
		private string _ask_User;
		
		private string _ask_Movie;
		
		private System.Nullable<System.DateTime> _ask_Time;
		
		private System.Nullable<int> _ask_With;
		
		private string _ask_Note;
		
		private System.Nullable<bool> _ask_State;
		
		private EntityRef<tbl_Movie> _tbl_Movie;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onask_IdChanging(string value);
    partial void Onask_IdChanged();
    partial void Onask_UserChanging(string value);
    partial void Onask_UserChanged();
    partial void Onask_MovieChanging(string value);
    partial void Onask_MovieChanged();
    partial void Onask_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onask_TimeChanged();
    partial void Onask_WithChanging(System.Nullable<int> value);
    partial void Onask_WithChanged();
    partial void Onask_NoteChanging(string value);
    partial void Onask_NoteChanged();
    partial void Onask_StateChanging(System.Nullable<bool> value);
    partial void Onask_StateChanged();
    #endregion
		
		public tbl_Ask()
		{
			this._tbl_Movie = default(EntityRef<tbl_Movie>);
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ask_Id
		{
			get
			{
				return this._ask_Id;
			}
			set
			{
				if ((this._ask_Id != value))
				{
					this.Onask_IdChanging(value);
					this.SendPropertyChanging();
					this._ask_Id = value;
					this.SendPropertyChanged("ask_Id");
					this.Onask_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_User", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ask_User
		{
			get
			{
				return this._ask_User;
			}
			set
			{
				if ((this._ask_User != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onask_UserChanging(value);
					this.SendPropertyChanging();
					this._ask_User = value;
					this.SendPropertyChanged("ask_User");
					this.Onask_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_Movie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ask_Movie
		{
			get
			{
				return this._ask_Movie;
			}
			set
			{
				if ((this._ask_Movie != value))
				{
					if (this._tbl_Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onask_MovieChanging(value);
					this.SendPropertyChanging();
					this._ask_Movie = value;
					this.SendPropertyChanged("ask_Movie");
					this.Onask_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> ask_Time
		{
			get
			{
				return this._ask_Time;
			}
			set
			{
				if ((this._ask_Time != value))
				{
					this.Onask_TimeChanging(value);
					this.SendPropertyChanging();
					this._ask_Time = value;
					this.SendPropertyChanged("ask_Time");
					this.Onask_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_With", DbType="Int")]
		public System.Nullable<int> ask_With
		{
			get
			{
				return this._ask_With;
			}
			set
			{
				if ((this._ask_With != value))
				{
					this.Onask_WithChanging(value);
					this.SendPropertyChanging();
					this._ask_With = value;
					this.SendPropertyChanged("ask_With");
					this.Onask_WithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_Note", DbType="NVarChar(MAX)")]
		public string ask_Note
		{
			get
			{
				return this._ask_Note;
			}
			set
			{
				if ((this._ask_Note != value))
				{
					this.Onask_NoteChanging(value);
					this.SendPropertyChanging();
					this._ask_Note = value;
					this.SendPropertyChanged("ask_Note");
					this.Onask_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask_State", DbType="Bit")]
		public System.Nullable<bool> ask_State
		{
			get
			{
				return this._ask_State;
			}
			set
			{
				if ((this._ask_State != value))
				{
					this.Onask_StateChanging(value);
					this.SendPropertyChanging();
					this._ask_State = value;
					this.SendPropertyChanged("ask_State");
					this.Onask_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Ask", Storage="_tbl_Movie", ThisKey="ask_Movie", OtherKey="movie_Id", IsForeignKey=true)]
		public tbl_Movie tbl_Movie
		{
			get
			{
				return this._tbl_Movie.Entity;
			}
			set
			{
				tbl_Movie previousValue = this._tbl_Movie.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Movie.Entity = null;
						previousValue.tbl_Ask.Remove(this);
					}
					this._tbl_Movie.Entity = value;
					if ((value != null))
					{
						value.tbl_Ask.Add(this);
						this._ask_Movie = value.movie_Id;
					}
					else
					{
						this._ask_Movie = default(string);
					}
					this.SendPropertyChanged("tbl_Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Ask", Storage="_tbl_UserAccount", ThisKey="ask_User", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Ask.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Ask.Add(this);
						this._ask_User = value.user_Id;
					}
					else
					{
						this._ask_User = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Celebrity")]
	public partial class tbl_Celebrity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _celeb_Id;
		
		private string _celeb_Name;
		
		private string _celeb_Aka;
		
		private string _celeb_NameEn;
		
		private string _celeb_AkaEn;
		
		private string _celeb_Gender;
		
		private string _celeb_Pro;
		
		private string _celeb_Birthday;
		
		private string _celeb_Deathday;
		
		private string _celeb_BornPlace;
		
		private string _celeb_Family;
		
		private string _celeb_Avatar;
		
		private string _celeb_Works;
		
		private string _celeb_DoubanID;
		
		private string _celeb_IMDbID;
		
		private string _celeb_Summary;
		
		private string _celeb_Create;
		
		private System.Nullable<byte> _celeb_Status;
		
		private string _celeb_Note;
		
		private System.Nullable<System.DateTime> _celeb_Time;
		
		private System.Nullable<System.DateTime> _celeb_AlterTime;
		
		private EntitySet<tbl_Work> _tbl_Work;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onceleb_IdChanging(string value);
    partial void Onceleb_IdChanged();
    partial void Onceleb_NameChanging(string value);
    partial void Onceleb_NameChanged();
    partial void Onceleb_AkaChanging(string value);
    partial void Onceleb_AkaChanged();
    partial void Onceleb_NameEnChanging(string value);
    partial void Onceleb_NameEnChanged();
    partial void Onceleb_AkaEnChanging(string value);
    partial void Onceleb_AkaEnChanged();
    partial void Onceleb_GenderChanging(string value);
    partial void Onceleb_GenderChanged();
    partial void Onceleb_ProChanging(string value);
    partial void Onceleb_ProChanged();
    partial void Onceleb_BirthdayChanging(string value);
    partial void Onceleb_BirthdayChanged();
    partial void Onceleb_DeathdayChanging(string value);
    partial void Onceleb_DeathdayChanged();
    partial void Onceleb_BornPlaceChanging(string value);
    partial void Onceleb_BornPlaceChanged();
    partial void Onceleb_FamilyChanging(string value);
    partial void Onceleb_FamilyChanged();
    partial void Onceleb_AvatarChanging(string value);
    partial void Onceleb_AvatarChanged();
    partial void Onceleb_WorksChanging(string value);
    partial void Onceleb_WorksChanged();
    partial void Onceleb_DoubanIDChanging(string value);
    partial void Onceleb_DoubanIDChanged();
    partial void Onceleb_IMDbIDChanging(string value);
    partial void Onceleb_IMDbIDChanged();
    partial void Onceleb_SummaryChanging(string value);
    partial void Onceleb_SummaryChanged();
    partial void Onceleb_CreateChanging(string value);
    partial void Onceleb_CreateChanged();
    partial void Onceleb_StatusChanging(System.Nullable<byte> value);
    partial void Onceleb_StatusChanged();
    partial void Onceleb_NoteChanging(string value);
    partial void Onceleb_NoteChanged();
    partial void Onceleb_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onceleb_TimeChanged();
    partial void Onceleb_AlterTimeChanging(System.Nullable<System.DateTime> value);
    partial void Onceleb_AlterTimeChanged();
    #endregion
		
		public tbl_Celebrity()
		{
			this._tbl_Work = new EntitySet<tbl_Work>(new Action<tbl_Work>(this.attach_tbl_Work), new Action<tbl_Work>(this.detach_tbl_Work));
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string celeb_Id
		{
			get
			{
				return this._celeb_Id;
			}
			set
			{
				if ((this._celeb_Id != value))
				{
					this.Onceleb_IdChanging(value);
					this.SendPropertyChanging();
					this._celeb_Id = value;
					this.SendPropertyChanged("celeb_Id");
					this.Onceleb_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string celeb_Name
		{
			get
			{
				return this._celeb_Name;
			}
			set
			{
				if ((this._celeb_Name != value))
				{
					this.Onceleb_NameChanging(value);
					this.SendPropertyChanging();
					this._celeb_Name = value;
					this.SendPropertyChanged("celeb_Name");
					this.Onceleb_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Aka", DbType="NVarChar(MAX)")]
		public string celeb_Aka
		{
			get
			{
				return this._celeb_Aka;
			}
			set
			{
				if ((this._celeb_Aka != value))
				{
					this.Onceleb_AkaChanging(value);
					this.SendPropertyChanging();
					this._celeb_Aka = value;
					this.SendPropertyChanged("celeb_Aka");
					this.Onceleb_AkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_NameEn", DbType="NVarChar(50)")]
		public string celeb_NameEn
		{
			get
			{
				return this._celeb_NameEn;
			}
			set
			{
				if ((this._celeb_NameEn != value))
				{
					this.Onceleb_NameEnChanging(value);
					this.SendPropertyChanging();
					this._celeb_NameEn = value;
					this.SendPropertyChanged("celeb_NameEn");
					this.Onceleb_NameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_AkaEn", DbType="NVarChar(MAX)")]
		public string celeb_AkaEn
		{
			get
			{
				return this._celeb_AkaEn;
			}
			set
			{
				if ((this._celeb_AkaEn != value))
				{
					this.Onceleb_AkaEnChanging(value);
					this.SendPropertyChanging();
					this._celeb_AkaEn = value;
					this.SendPropertyChanged("celeb_AkaEn");
					this.Onceleb_AkaEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Gender", DbType="NVarChar(10)")]
		public string celeb_Gender
		{
			get
			{
				return this._celeb_Gender;
			}
			set
			{
				if ((this._celeb_Gender != value))
				{
					this.Onceleb_GenderChanging(value);
					this.SendPropertyChanging();
					this._celeb_Gender = value;
					this.SendPropertyChanged("celeb_Gender");
					this.Onceleb_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Pro", DbType="NVarChar(MAX)")]
		public string celeb_Pro
		{
			get
			{
				return this._celeb_Pro;
			}
			set
			{
				if ((this._celeb_Pro != value))
				{
					this.Onceleb_ProChanging(value);
					this.SendPropertyChanging();
					this._celeb_Pro = value;
					this.SendPropertyChanged("celeb_Pro");
					this.Onceleb_ProChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Birthday", DbType="NVarChar(50)")]
		public string celeb_Birthday
		{
			get
			{
				return this._celeb_Birthday;
			}
			set
			{
				if ((this._celeb_Birthday != value))
				{
					this.Onceleb_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._celeb_Birthday = value;
					this.SendPropertyChanged("celeb_Birthday");
					this.Onceleb_BirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Deathday", DbType="NVarChar(50)")]
		public string celeb_Deathday
		{
			get
			{
				return this._celeb_Deathday;
			}
			set
			{
				if ((this._celeb_Deathday != value))
				{
					this.Onceleb_DeathdayChanging(value);
					this.SendPropertyChanging();
					this._celeb_Deathday = value;
					this.SendPropertyChanged("celeb_Deathday");
					this.Onceleb_DeathdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_BornPlace", DbType="NVarChar(50)")]
		public string celeb_BornPlace
		{
			get
			{
				return this._celeb_BornPlace;
			}
			set
			{
				if ((this._celeb_BornPlace != value))
				{
					this.Onceleb_BornPlaceChanging(value);
					this.SendPropertyChanging();
					this._celeb_BornPlace = value;
					this.SendPropertyChanged("celeb_BornPlace");
					this.Onceleb_BornPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Family", DbType="NVarChar(MAX)")]
		public string celeb_Family
		{
			get
			{
				return this._celeb_Family;
			}
			set
			{
				if ((this._celeb_Family != value))
				{
					this.Onceleb_FamilyChanging(value);
					this.SendPropertyChanging();
					this._celeb_Family = value;
					this.SendPropertyChanged("celeb_Family");
					this.Onceleb_FamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Avatar", DbType="NVarChar(50)")]
		public string celeb_Avatar
		{
			get
			{
				return this._celeb_Avatar;
			}
			set
			{
				if ((this._celeb_Avatar != value))
				{
					this.Onceleb_AvatarChanging(value);
					this.SendPropertyChanging();
					this._celeb_Avatar = value;
					this.SendPropertyChanged("celeb_Avatar");
					this.Onceleb_AvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Works", DbType="NVarChar(MAX)")]
		public string celeb_Works
		{
			get
			{
				return this._celeb_Works;
			}
			set
			{
				if ((this._celeb_Works != value))
				{
					this.Onceleb_WorksChanging(value);
					this.SendPropertyChanging();
					this._celeb_Works = value;
					this.SendPropertyChanged("celeb_Works");
					this.Onceleb_WorksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_DoubanID", DbType="NVarChar(50)")]
		public string celeb_DoubanID
		{
			get
			{
				return this._celeb_DoubanID;
			}
			set
			{
				if ((this._celeb_DoubanID != value))
				{
					this.Onceleb_DoubanIDChanging(value);
					this.SendPropertyChanging();
					this._celeb_DoubanID = value;
					this.SendPropertyChanged("celeb_DoubanID");
					this.Onceleb_DoubanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_IMDbID", DbType="NVarChar(50)")]
		public string celeb_IMDbID
		{
			get
			{
				return this._celeb_IMDbID;
			}
			set
			{
				if ((this._celeb_IMDbID != value))
				{
					this.Onceleb_IMDbIDChanging(value);
					this.SendPropertyChanging();
					this._celeb_IMDbID = value;
					this.SendPropertyChanged("celeb_IMDbID");
					this.Onceleb_IMDbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Summary", DbType="NVarChar(MAX)")]
		public string celeb_Summary
		{
			get
			{
				return this._celeb_Summary;
			}
			set
			{
				if ((this._celeb_Summary != value))
				{
					this.Onceleb_SummaryChanging(value);
					this.SendPropertyChanging();
					this._celeb_Summary = value;
					this.SendPropertyChanged("celeb_Summary");
					this.Onceleb_SummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Create", DbType="VarChar(50)")]
		public string celeb_Create
		{
			get
			{
				return this._celeb_Create;
			}
			set
			{
				if ((this._celeb_Create != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onceleb_CreateChanging(value);
					this.SendPropertyChanging();
					this._celeb_Create = value;
					this.SendPropertyChanged("celeb_Create");
					this.Onceleb_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Status", DbType="TinyInt")]
		public System.Nullable<byte> celeb_Status
		{
			get
			{
				return this._celeb_Status;
			}
			set
			{
				if ((this._celeb_Status != value))
				{
					this.Onceleb_StatusChanging(value);
					this.SendPropertyChanging();
					this._celeb_Status = value;
					this.SendPropertyChanged("celeb_Status");
					this.Onceleb_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Note", DbType="NVarChar(100)")]
		public string celeb_Note
		{
			get
			{
				return this._celeb_Note;
			}
			set
			{
				if ((this._celeb_Note != value))
				{
					this.Onceleb_NoteChanging(value);
					this.SendPropertyChanging();
					this._celeb_Note = value;
					this.SendPropertyChanged("celeb_Note");
					this.Onceleb_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> celeb_Time
		{
			get
			{
				return this._celeb_Time;
			}
			set
			{
				if ((this._celeb_Time != value))
				{
					this.Onceleb_TimeChanging(value);
					this.SendPropertyChanging();
					this._celeb_Time = value;
					this.SendPropertyChanged("celeb_Time");
					this.Onceleb_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celeb_AlterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> celeb_AlterTime
		{
			get
			{
				return this._celeb_AlterTime;
			}
			set
			{
				if ((this._celeb_AlterTime != value))
				{
					this.Onceleb_AlterTimeChanging(value);
					this.SendPropertyChanging();
					this._celeb_AlterTime = value;
					this.SendPropertyChanged("celeb_AlterTime");
					this.Onceleb_AlterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Celebrity_tbl_Work", Storage="_tbl_Work", ThisKey="celeb_Id", OtherKey="work_Celeb")]
		public EntitySet<tbl_Work> tbl_Work
		{
			get
			{
				return this._tbl_Work;
			}
			set
			{
				this._tbl_Work.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Celebrity", Storage="_tbl_UserAccount", ThisKey="celeb_Create", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Celebrity.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Celebrity.Add(this);
						this._celeb_Create = value.user_Id;
					}
					else
					{
						this._celeb_Create = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Work(tbl_Work entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Celebrity = this;
		}
		
		private void detach_tbl_Work(tbl_Work entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Celebrity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Comment")]
	public partial class tbl_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cmt_Id;
		
		private string _cmt_Content;
		
		private string _cmt_User;
		
		private string _cmt_Movie;
		
		private System.Nullable<System.DateTime> _cmt_Time;
		
		private EntityRef<tbl_Movie> _tbl_Movie;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncmt_IdChanging(string value);
    partial void Oncmt_IdChanged();
    partial void Oncmt_ContentChanging(string value);
    partial void Oncmt_ContentChanged();
    partial void Oncmt_UserChanging(string value);
    partial void Oncmt_UserChanged();
    partial void Oncmt_MovieChanging(string value);
    partial void Oncmt_MovieChanged();
    partial void Oncmt_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Oncmt_TimeChanged();
    #endregion
		
		public tbl_Comment()
		{
			this._tbl_Movie = default(EntityRef<tbl_Movie>);
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cmt_Id
		{
			get
			{
				return this._cmt_Id;
			}
			set
			{
				if ((this._cmt_Id != value))
				{
					this.Oncmt_IdChanging(value);
					this.SendPropertyChanging();
					this._cmt_Id = value;
					this.SendPropertyChanged("cmt_Id");
					this.Oncmt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string cmt_Content
		{
			get
			{
				return this._cmt_Content;
			}
			set
			{
				if ((this._cmt_Content != value))
				{
					this.Oncmt_ContentChanging(value);
					this.SendPropertyChanging();
					this._cmt_Content = value;
					this.SendPropertyChanged("cmt_Content");
					this.Oncmt_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_User", DbType="VarChar(50)")]
		public string cmt_User
		{
			get
			{
				return this._cmt_User;
			}
			set
			{
				if ((this._cmt_User != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncmt_UserChanging(value);
					this.SendPropertyChanging();
					this._cmt_User = value;
					this.SendPropertyChanged("cmt_User");
					this.Oncmt_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_Movie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cmt_Movie
		{
			get
			{
				return this._cmt_Movie;
			}
			set
			{
				if ((this._cmt_Movie != value))
				{
					if (this._tbl_Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncmt_MovieChanging(value);
					this.SendPropertyChanging();
					this._cmt_Movie = value;
					this.SendPropertyChanged("cmt_Movie");
					this.Oncmt_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> cmt_Time
		{
			get
			{
				return this._cmt_Time;
			}
			set
			{
				if ((this._cmt_Time != value))
				{
					this.Oncmt_TimeChanging(value);
					this.SendPropertyChanging();
					this._cmt_Time = value;
					this.SendPropertyChanged("cmt_Time");
					this.Oncmt_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Comment", Storage="_tbl_Movie", ThisKey="cmt_Movie", OtherKey="movie_Id", IsForeignKey=true)]
		public tbl_Movie tbl_Movie
		{
			get
			{
				return this._tbl_Movie.Entity;
			}
			set
			{
				tbl_Movie previousValue = this._tbl_Movie.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Movie.Entity = null;
						previousValue.tbl_Comment.Remove(this);
					}
					this._tbl_Movie.Entity = value;
					if ((value != null))
					{
						value.tbl_Comment.Add(this);
						this._cmt_Movie = value.movie_Id;
					}
					else
					{
						this._cmt_Movie = default(string);
					}
					this.SendPropertyChanged("tbl_Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Comment", Storage="_tbl_UserAccount", ThisKey="cmt_User", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Comment.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Comment.Add(this);
						this._cmt_User = value.user_Id;
					}
					else
					{
						this._cmt_User = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Country")]
	public partial class tbl_Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _country_Id;
		
		private string _country_Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncountry_IdChanging(byte value);
    partial void Oncountry_IdChanged();
    partial void Oncountry_NameChanging(string value);
    partial void Oncountry_NameChanged();
    #endregion
		
		public tbl_Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_Id", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte country_Id
		{
			get
			{
				return this._country_Id;
			}
			set
			{
				if ((this._country_Id != value))
				{
					this.Oncountry_IdChanging(value);
					this.SendPropertyChanging();
					this._country_Id = value;
					this.SendPropertyChanged("country_Id");
					this.Oncountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string country_Name
		{
			get
			{
				return this._country_Name;
			}
			set
			{
				if ((this._country_Name != value))
				{
					this.Oncountry_NameChanging(value);
					this.SendPropertyChanging();
					this._country_Name = value;
					this.SendPropertyChanged("country_Name");
					this.Oncountry_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Discovery")]
	public partial class tbl_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _disc_Id;
		
		private string _disc_Movie;
		
		private string _disc_Image;
		
		private int _disc_Flag;
		
		private System.Nullable<System.DateTime> _disc_Time;
		
		private EntityRef<tbl_Movie> _tbl_Movie;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondisc_IdChanging(string value);
    partial void Ondisc_IdChanged();
    partial void Ondisc_MovieChanging(string value);
    partial void Ondisc_MovieChanged();
    partial void Ondisc_ImageChanging(string value);
    partial void Ondisc_ImageChanged();
    partial void Ondisc_FlagChanging(int value);
    partial void Ondisc_FlagChanged();
    partial void Ondisc_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Ondisc_TimeChanged();
    #endregion
		
		public tbl_Discovery()
		{
			this._tbl_Movie = default(EntityRef<tbl_Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string disc_Id
		{
			get
			{
				return this._disc_Id;
			}
			set
			{
				if ((this._disc_Id != value))
				{
					this.Ondisc_IdChanging(value);
					this.SendPropertyChanging();
					this._disc_Id = value;
					this.SendPropertyChanged("disc_Id");
					this.Ondisc_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc_Movie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string disc_Movie
		{
			get
			{
				return this._disc_Movie;
			}
			set
			{
				if ((this._disc_Movie != value))
				{
					if (this._tbl_Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondisc_MovieChanging(value);
					this.SendPropertyChanging();
					this._disc_Movie = value;
					this.SendPropertyChanged("disc_Movie");
					this.Ondisc_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc_Image", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string disc_Image
		{
			get
			{
				return this._disc_Image;
			}
			set
			{
				if ((this._disc_Image != value))
				{
					this.Ondisc_ImageChanging(value);
					this.SendPropertyChanging();
					this._disc_Image = value;
					this.SendPropertyChanged("disc_Image");
					this.Ondisc_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc_Flag", DbType="Int NOT NULL")]
		public int disc_Flag
		{
			get
			{
				return this._disc_Flag;
			}
			set
			{
				if ((this._disc_Flag != value))
				{
					this.Ondisc_FlagChanging(value);
					this.SendPropertyChanging();
					this._disc_Flag = value;
					this.SendPropertyChanged("disc_Flag");
					this.Ondisc_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> disc_Time
		{
			get
			{
				return this._disc_Time;
			}
			set
			{
				if ((this._disc_Time != value))
				{
					this.Ondisc_TimeChanging(value);
					this.SendPropertyChanging();
					this._disc_Time = value;
					this.SendPropertyChanged("disc_Time");
					this.Ondisc_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Discovery", Storage="_tbl_Movie", ThisKey="disc_Movie", OtherKey="movie_Id", IsForeignKey=true)]
		public tbl_Movie tbl_Movie
		{
			get
			{
				return this._tbl_Movie.Entity;
			}
			set
			{
				tbl_Movie previousValue = this._tbl_Movie.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Movie.Entity = null;
						previousValue.tbl_Discovery.Remove(this);
					}
					this._tbl_Movie.Entity = value;
					if ((value != null))
					{
						value.tbl_Discovery.Add(this);
						this._disc_Movie = value.movie_Id;
					}
					else
					{
						this._disc_Movie = default(string);
					}
					this.SendPropertyChanged("tbl_Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_GenreMovie")]
	public partial class tbl_GenreMovie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _genre_Id;
		
		private string _genre_Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongenre_IdChanging(byte value);
    partial void Ongenre_IdChanged();
    partial void Ongenre_NameChanging(string value);
    partial void Ongenre_NameChanged();
    #endregion
		
		public tbl_GenreMovie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_Id", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte genre_Id
		{
			get
			{
				return this._genre_Id;
			}
			set
			{
				if ((this._genre_Id != value))
				{
					this.Ongenre_IdChanging(value);
					this.SendPropertyChanging();
					this._genre_Id = value;
					this.SendPropertyChanged("genre_Id");
					this.Ongenre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string genre_Name
		{
			get
			{
				return this._genre_Name;
			}
			set
			{
				if ((this._genre_Name != value))
				{
					this.Ongenre_NameChanging(value);
					this.SendPropertyChanging();
					this._genre_Name = value;
					this.SendPropertyChanged("genre_Name");
					this.Ongenre_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Language")]
	public partial class tbl_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _lang_Id;
		
		private string _lang_Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlang_IdChanging(byte value);
    partial void Onlang_IdChanged();
    partial void Onlang_NameChanging(string value);
    partial void Onlang_NameChanged();
    #endregion
		
		public tbl_Language()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lang_Id", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte lang_Id
		{
			get
			{
				return this._lang_Id;
			}
			set
			{
				if ((this._lang_Id != value))
				{
					this.Onlang_IdChanging(value);
					this.SendPropertyChanging();
					this._lang_Id = value;
					this.SendPropertyChanged("lang_Id");
					this.Onlang_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lang_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lang_Name
		{
			get
			{
				return this._lang_Name;
			}
			set
			{
				if ((this._lang_Name != value))
				{
					this.Onlang_NameChanging(value);
					this.SendPropertyChanging();
					this._lang_Name = value;
					this.SendPropertyChanged("lang_Name");
					this.Onlang_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Movie")]
	public partial class tbl_Movie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _movie_Id;
		
		private string _movie_Title;
		
		private string _movie_TitleEn;
		
		private string _movie_Aka;
		
		private string _movie_Directors;
		
		private string _movie_Writers;
		
		private string _movie_Casts;
		
		private string _movie_DirectorsId;
		
		private string _movie_WritersId;
		
		private string _movie_CastsId;
		
		private string _movie_Year;
		
		private string _movie_Pubdates;
		
		private string _movie_Durations;
		
		private string _movie_Genres;
		
		private string _movie_Languages;
		
		private string _movie_Countries;
		
		private string _movie_Rating;
		
		private string _movie_RatingCount;
		
		private string _movie_DoubanID;
		
		private string _movie_IMDbID;
		
		private string _movie_Summary;
		
		private string _movie_Avatar;
		
		private string _movie_Create;
		
		private System.Nullable<byte> _movie_Status;
		
		private string _movie_Note;
		
		private System.Nullable<System.DateTime> _movie_Time;
		
		private System.Nullable<System.DateTime> _movie_AlterTime;
		
		private System.Nullable<int> _movie_VisitCount;
		
		private EntitySet<tbl_Ask> _tbl_Ask;
		
		private EntitySet<tbl_Comment> _tbl_Comment;
		
		private EntitySet<tbl_Discovery> _tbl_Discovery;
		
		private EntitySet<tbl_Resource> _tbl_Resource;
		
		private EntitySet<tbl_Work> _tbl_Work;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmovie_IdChanging(string value);
    partial void Onmovie_IdChanged();
    partial void Onmovie_TitleChanging(string value);
    partial void Onmovie_TitleChanged();
    partial void Onmovie_TitleEnChanging(string value);
    partial void Onmovie_TitleEnChanged();
    partial void Onmovie_AkaChanging(string value);
    partial void Onmovie_AkaChanged();
    partial void Onmovie_DirectorsChanging(string value);
    partial void Onmovie_DirectorsChanged();
    partial void Onmovie_WritersChanging(string value);
    partial void Onmovie_WritersChanged();
    partial void Onmovie_CastsChanging(string value);
    partial void Onmovie_CastsChanged();
    partial void Onmovie_DirectorsIdChanging(string value);
    partial void Onmovie_DirectorsIdChanged();
    partial void Onmovie_WritersIdChanging(string value);
    partial void Onmovie_WritersIdChanged();
    partial void Onmovie_CastsIdChanging(string value);
    partial void Onmovie_CastsIdChanged();
    partial void Onmovie_YearChanging(string value);
    partial void Onmovie_YearChanged();
    partial void Onmovie_PubdatesChanging(string value);
    partial void Onmovie_PubdatesChanged();
    partial void Onmovie_DurationsChanging(string value);
    partial void Onmovie_DurationsChanged();
    partial void Onmovie_GenresChanging(string value);
    partial void Onmovie_GenresChanged();
    partial void Onmovie_LanguagesChanging(string value);
    partial void Onmovie_LanguagesChanged();
    partial void Onmovie_CountriesChanging(string value);
    partial void Onmovie_CountriesChanged();
    partial void Onmovie_RatingChanging(string value);
    partial void Onmovie_RatingChanged();
    partial void Onmovie_RatingCountChanging(string value);
    partial void Onmovie_RatingCountChanged();
    partial void Onmovie_DoubanIDChanging(string value);
    partial void Onmovie_DoubanIDChanged();
    partial void Onmovie_IMDbIDChanging(string value);
    partial void Onmovie_IMDbIDChanged();
    partial void Onmovie_SummaryChanging(string value);
    partial void Onmovie_SummaryChanged();
    partial void Onmovie_AvatarChanging(string value);
    partial void Onmovie_AvatarChanged();
    partial void Onmovie_CreateChanging(string value);
    partial void Onmovie_CreateChanged();
    partial void Onmovie_StatusChanging(System.Nullable<byte> value);
    partial void Onmovie_StatusChanged();
    partial void Onmovie_NoteChanging(string value);
    partial void Onmovie_NoteChanged();
    partial void Onmovie_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onmovie_TimeChanged();
    partial void Onmovie_AlterTimeChanging(System.Nullable<System.DateTime> value);
    partial void Onmovie_AlterTimeChanged();
    partial void Onmovie_VisitCountChanging(System.Nullable<int> value);
    partial void Onmovie_VisitCountChanged();
    #endregion
		
		public tbl_Movie()
		{
			this._tbl_Ask = new EntitySet<tbl_Ask>(new Action<tbl_Ask>(this.attach_tbl_Ask), new Action<tbl_Ask>(this.detach_tbl_Ask));
			this._tbl_Comment = new EntitySet<tbl_Comment>(new Action<tbl_Comment>(this.attach_tbl_Comment), new Action<tbl_Comment>(this.detach_tbl_Comment));
			this._tbl_Discovery = new EntitySet<tbl_Discovery>(new Action<tbl_Discovery>(this.attach_tbl_Discovery), new Action<tbl_Discovery>(this.detach_tbl_Discovery));
			this._tbl_Resource = new EntitySet<tbl_Resource>(new Action<tbl_Resource>(this.attach_tbl_Resource), new Action<tbl_Resource>(this.detach_tbl_Resource));
			this._tbl_Work = new EntitySet<tbl_Work>(new Action<tbl_Work>(this.attach_tbl_Work), new Action<tbl_Work>(this.detach_tbl_Work));
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string movie_Id
		{
			get
			{
				return this._movie_Id;
			}
			set
			{
				if ((this._movie_Id != value))
				{
					this.Onmovie_IdChanging(value);
					this.SendPropertyChanging();
					this._movie_Id = value;
					this.SendPropertyChanged("movie_Id");
					this.Onmovie_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string movie_Title
		{
			get
			{
				return this._movie_Title;
			}
			set
			{
				if ((this._movie_Title != value))
				{
					this.Onmovie_TitleChanging(value);
					this.SendPropertyChanging();
					this._movie_Title = value;
					this.SendPropertyChanged("movie_Title");
					this.Onmovie_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_TitleEn", DbType="NVarChar(100)")]
		public string movie_TitleEn
		{
			get
			{
				return this._movie_TitleEn;
			}
			set
			{
				if ((this._movie_TitleEn != value))
				{
					this.Onmovie_TitleEnChanging(value);
					this.SendPropertyChanging();
					this._movie_TitleEn = value;
					this.SendPropertyChanged("movie_TitleEn");
					this.Onmovie_TitleEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Aka", DbType="NVarChar(MAX)")]
		public string movie_Aka
		{
			get
			{
				return this._movie_Aka;
			}
			set
			{
				if ((this._movie_Aka != value))
				{
					this.Onmovie_AkaChanging(value);
					this.SendPropertyChanging();
					this._movie_Aka = value;
					this.SendPropertyChanged("movie_Aka");
					this.Onmovie_AkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Directors", DbType="NVarChar(MAX)")]
		public string movie_Directors
		{
			get
			{
				return this._movie_Directors;
			}
			set
			{
				if ((this._movie_Directors != value))
				{
					this.Onmovie_DirectorsChanging(value);
					this.SendPropertyChanging();
					this._movie_Directors = value;
					this.SendPropertyChanged("movie_Directors");
					this.Onmovie_DirectorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Writers", DbType="NVarChar(MAX)")]
		public string movie_Writers
		{
			get
			{
				return this._movie_Writers;
			}
			set
			{
				if ((this._movie_Writers != value))
				{
					this.Onmovie_WritersChanging(value);
					this.SendPropertyChanging();
					this._movie_Writers = value;
					this.SendPropertyChanged("movie_Writers");
					this.Onmovie_WritersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Casts", DbType="NVarChar(MAX)")]
		public string movie_Casts
		{
			get
			{
				return this._movie_Casts;
			}
			set
			{
				if ((this._movie_Casts != value))
				{
					this.Onmovie_CastsChanging(value);
					this.SendPropertyChanging();
					this._movie_Casts = value;
					this.SendPropertyChanged("movie_Casts");
					this.Onmovie_CastsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_DirectorsId", DbType="NVarChar(MAX)")]
		public string movie_DirectorsId
		{
			get
			{
				return this._movie_DirectorsId;
			}
			set
			{
				if ((this._movie_DirectorsId != value))
				{
					this.Onmovie_DirectorsIdChanging(value);
					this.SendPropertyChanging();
					this._movie_DirectorsId = value;
					this.SendPropertyChanged("movie_DirectorsId");
					this.Onmovie_DirectorsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_WritersId", DbType="NVarChar(MAX)")]
		public string movie_WritersId
		{
			get
			{
				return this._movie_WritersId;
			}
			set
			{
				if ((this._movie_WritersId != value))
				{
					this.Onmovie_WritersIdChanging(value);
					this.SendPropertyChanging();
					this._movie_WritersId = value;
					this.SendPropertyChanged("movie_WritersId");
					this.Onmovie_WritersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_CastsId", DbType="NVarChar(MAX)")]
		public string movie_CastsId
		{
			get
			{
				return this._movie_CastsId;
			}
			set
			{
				if ((this._movie_CastsId != value))
				{
					this.Onmovie_CastsIdChanging(value);
					this.SendPropertyChanging();
					this._movie_CastsId = value;
					this.SendPropertyChanged("movie_CastsId");
					this.Onmovie_CastsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Year", DbType="VarChar(50)")]
		public string movie_Year
		{
			get
			{
				return this._movie_Year;
			}
			set
			{
				if ((this._movie_Year != value))
				{
					this.Onmovie_YearChanging(value);
					this.SendPropertyChanging();
					this._movie_Year = value;
					this.SendPropertyChanged("movie_Year");
					this.Onmovie_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Pubdates", DbType="NVarChar(200)")]
		public string movie_Pubdates
		{
			get
			{
				return this._movie_Pubdates;
			}
			set
			{
				if ((this._movie_Pubdates != value))
				{
					this.Onmovie_PubdatesChanging(value);
					this.SendPropertyChanging();
					this._movie_Pubdates = value;
					this.SendPropertyChanged("movie_Pubdates");
					this.Onmovie_PubdatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Durations", DbType="NVarChar(200)")]
		public string movie_Durations
		{
			get
			{
				return this._movie_Durations;
			}
			set
			{
				if ((this._movie_Durations != value))
				{
					this.Onmovie_DurationsChanging(value);
					this.SendPropertyChanging();
					this._movie_Durations = value;
					this.SendPropertyChanged("movie_Durations");
					this.Onmovie_DurationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Genres", DbType="VarChar(50)")]
		public string movie_Genres
		{
			get
			{
				return this._movie_Genres;
			}
			set
			{
				if ((this._movie_Genres != value))
				{
					this.Onmovie_GenresChanging(value);
					this.SendPropertyChanging();
					this._movie_Genres = value;
					this.SendPropertyChanged("movie_Genres");
					this.Onmovie_GenresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Languages", DbType="VarChar(50)")]
		public string movie_Languages
		{
			get
			{
				return this._movie_Languages;
			}
			set
			{
				if ((this._movie_Languages != value))
				{
					this.Onmovie_LanguagesChanging(value);
					this.SendPropertyChanging();
					this._movie_Languages = value;
					this.SendPropertyChanged("movie_Languages");
					this.Onmovie_LanguagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Countries", DbType="VarChar(50)")]
		public string movie_Countries
		{
			get
			{
				return this._movie_Countries;
			}
			set
			{
				if ((this._movie_Countries != value))
				{
					this.Onmovie_CountriesChanging(value);
					this.SendPropertyChanging();
					this._movie_Countries = value;
					this.SendPropertyChanged("movie_Countries");
					this.Onmovie_CountriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Rating", DbType="VarChar(50)")]
		public string movie_Rating
		{
			get
			{
				return this._movie_Rating;
			}
			set
			{
				if ((this._movie_Rating != value))
				{
					this.Onmovie_RatingChanging(value);
					this.SendPropertyChanging();
					this._movie_Rating = value;
					this.SendPropertyChanged("movie_Rating");
					this.Onmovie_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_RatingCount", DbType="VarChar(50)")]
		public string movie_RatingCount
		{
			get
			{
				return this._movie_RatingCount;
			}
			set
			{
				if ((this._movie_RatingCount != value))
				{
					this.Onmovie_RatingCountChanging(value);
					this.SendPropertyChanging();
					this._movie_RatingCount = value;
					this.SendPropertyChanged("movie_RatingCount");
					this.Onmovie_RatingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_DoubanID", DbType="NVarChar(50)")]
		public string movie_DoubanID
		{
			get
			{
				return this._movie_DoubanID;
			}
			set
			{
				if ((this._movie_DoubanID != value))
				{
					this.Onmovie_DoubanIDChanging(value);
					this.SendPropertyChanging();
					this._movie_DoubanID = value;
					this.SendPropertyChanged("movie_DoubanID");
					this.Onmovie_DoubanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_IMDbID", DbType="NVarChar(50)")]
		public string movie_IMDbID
		{
			get
			{
				return this._movie_IMDbID;
			}
			set
			{
				if ((this._movie_IMDbID != value))
				{
					this.Onmovie_IMDbIDChanging(value);
					this.SendPropertyChanging();
					this._movie_IMDbID = value;
					this.SendPropertyChanged("movie_IMDbID");
					this.Onmovie_IMDbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Summary", DbType="NVarChar(MAX)")]
		public string movie_Summary
		{
			get
			{
				return this._movie_Summary;
			}
			set
			{
				if ((this._movie_Summary != value))
				{
					this.Onmovie_SummaryChanging(value);
					this.SendPropertyChanging();
					this._movie_Summary = value;
					this.SendPropertyChanged("movie_Summary");
					this.Onmovie_SummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Avatar", DbType="NVarChar(50)")]
		public string movie_Avatar
		{
			get
			{
				return this._movie_Avatar;
			}
			set
			{
				if ((this._movie_Avatar != value))
				{
					this.Onmovie_AvatarChanging(value);
					this.SendPropertyChanging();
					this._movie_Avatar = value;
					this.SendPropertyChanged("movie_Avatar");
					this.Onmovie_AvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Create", DbType="VarChar(50)")]
		public string movie_Create
		{
			get
			{
				return this._movie_Create;
			}
			set
			{
				if ((this._movie_Create != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmovie_CreateChanging(value);
					this.SendPropertyChanging();
					this._movie_Create = value;
					this.SendPropertyChanged("movie_Create");
					this.Onmovie_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Status", DbType="TinyInt")]
		public System.Nullable<byte> movie_Status
		{
			get
			{
				return this._movie_Status;
			}
			set
			{
				if ((this._movie_Status != value))
				{
					this.Onmovie_StatusChanging(value);
					this.SendPropertyChanging();
					this._movie_Status = value;
					this.SendPropertyChanged("movie_Status");
					this.Onmovie_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Note", DbType="NVarChar(100)")]
		public string movie_Note
		{
			get
			{
				return this._movie_Note;
			}
			set
			{
				if ((this._movie_Note != value))
				{
					this.Onmovie_NoteChanging(value);
					this.SendPropertyChanging();
					this._movie_Note = value;
					this.SendPropertyChanged("movie_Note");
					this.Onmovie_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> movie_Time
		{
			get
			{
				return this._movie_Time;
			}
			set
			{
				if ((this._movie_Time != value))
				{
					this.Onmovie_TimeChanging(value);
					this.SendPropertyChanging();
					this._movie_Time = value;
					this.SendPropertyChanged("movie_Time");
					this.Onmovie_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_AlterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> movie_AlterTime
		{
			get
			{
				return this._movie_AlterTime;
			}
			set
			{
				if ((this._movie_AlterTime != value))
				{
					this.Onmovie_AlterTimeChanging(value);
					this.SendPropertyChanging();
					this._movie_AlterTime = value;
					this.SendPropertyChanged("movie_AlterTime");
					this.Onmovie_AlterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_VisitCount", DbType="Int")]
		public System.Nullable<int> movie_VisitCount
		{
			get
			{
				return this._movie_VisitCount;
			}
			set
			{
				if ((this._movie_VisitCount != value))
				{
					this.Onmovie_VisitCountChanging(value);
					this.SendPropertyChanging();
					this._movie_VisitCount = value;
					this.SendPropertyChanged("movie_VisitCount");
					this.Onmovie_VisitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Ask", Storage="_tbl_Ask", ThisKey="movie_Id", OtherKey="ask_Movie")]
		public EntitySet<tbl_Ask> tbl_Ask
		{
			get
			{
				return this._tbl_Ask;
			}
			set
			{
				this._tbl_Ask.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Comment", Storage="_tbl_Comment", ThisKey="movie_Id", OtherKey="cmt_Movie")]
		public EntitySet<tbl_Comment> tbl_Comment
		{
			get
			{
				return this._tbl_Comment;
			}
			set
			{
				this._tbl_Comment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Discovery", Storage="_tbl_Discovery", ThisKey="movie_Id", OtherKey="disc_Movie")]
		public EntitySet<tbl_Discovery> tbl_Discovery
		{
			get
			{
				return this._tbl_Discovery;
			}
			set
			{
				this._tbl_Discovery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Resource", Storage="_tbl_Resource", ThisKey="movie_Id", OtherKey="res_Movie")]
		public EntitySet<tbl_Resource> tbl_Resource
		{
			get
			{
				return this._tbl_Resource;
			}
			set
			{
				this._tbl_Resource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Work", Storage="_tbl_Work", ThisKey="movie_Id", OtherKey="work_Movie")]
		public EntitySet<tbl_Work> tbl_Work
		{
			get
			{
				return this._tbl_Work;
			}
			set
			{
				this._tbl_Work.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Movie", Storage="_tbl_UserAccount", ThisKey="movie_Create", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Movie.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Movie.Add(this);
						this._movie_Create = value.user_Id;
					}
					else
					{
						this._movie_Create = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Ask(tbl_Ask entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = this;
		}
		
		private void detach_tbl_Ask(tbl_Ask entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = null;
		}
		
		private void attach_tbl_Comment(tbl_Comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = this;
		}
		
		private void detach_tbl_Comment(tbl_Comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = null;
		}
		
		private void attach_tbl_Discovery(tbl_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = this;
		}
		
		private void detach_tbl_Discovery(tbl_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = null;
		}
		
		private void attach_tbl_Resource(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = this;
		}
		
		private void detach_tbl_Resource(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = null;
		}
		
		private void attach_tbl_Work(tbl_Work entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = this;
		}
		
		private void detach_tbl_Work(tbl_Work entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Movie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Notice")]
	public partial class tbl_Notice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _notice_Id;
		
		private string _notice_Content;
		
		private string _notice_Res;
		
		private string _notice_User;
		
		private System.Nullable<System.DateTime> _notice_Time;
		
		private System.Nullable<byte> _notice_Flag;
		
		private EntityRef<tbl_Resource> _tbl_Resource;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnotice_IdChanging(string value);
    partial void Onnotice_IdChanged();
    partial void Onnotice_ContentChanging(string value);
    partial void Onnotice_ContentChanged();
    partial void Onnotice_ResChanging(string value);
    partial void Onnotice_ResChanged();
    partial void Onnotice_UserChanging(string value);
    partial void Onnotice_UserChanged();
    partial void Onnotice_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onnotice_TimeChanged();
    partial void Onnotice_FlagChanging(System.Nullable<byte> value);
    partial void Onnotice_FlagChanged();
    #endregion
		
		public tbl_Notice()
		{
			this._tbl_Resource = default(EntityRef<tbl_Resource>);
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string notice_Id
		{
			get
			{
				return this._notice_Id;
			}
			set
			{
				if ((this._notice_Id != value))
				{
					this.Onnotice_IdChanging(value);
					this.SendPropertyChanging();
					this._notice_Id = value;
					this.SendPropertyChanged("notice_Id");
					this.Onnotice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string notice_Content
		{
			get
			{
				return this._notice_Content;
			}
			set
			{
				if ((this._notice_Content != value))
				{
					this.Onnotice_ContentChanging(value);
					this.SendPropertyChanging();
					this._notice_Content = value;
					this.SendPropertyChanged("notice_Content");
					this.Onnotice_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice_Res", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string notice_Res
		{
			get
			{
				return this._notice_Res;
			}
			set
			{
				if ((this._notice_Res != value))
				{
					if (this._tbl_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnotice_ResChanging(value);
					this.SendPropertyChanging();
					this._notice_Res = value;
					this.SendPropertyChanged("notice_Res");
					this.Onnotice_ResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice_User", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string notice_User
		{
			get
			{
				return this._notice_User;
			}
			set
			{
				if ((this._notice_User != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnotice_UserChanging(value);
					this.SendPropertyChanging();
					this._notice_User = value;
					this.SendPropertyChanged("notice_User");
					this.Onnotice_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> notice_Time
		{
			get
			{
				return this._notice_Time;
			}
			set
			{
				if ((this._notice_Time != value))
				{
					this.Onnotice_TimeChanging(value);
					this.SendPropertyChanging();
					this._notice_Time = value;
					this.SendPropertyChanged("notice_Time");
					this.Onnotice_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice_Flag", DbType="TinyInt")]
		public System.Nullable<byte> notice_Flag
		{
			get
			{
				return this._notice_Flag;
			}
			set
			{
				if ((this._notice_Flag != value))
				{
					this.Onnotice_FlagChanging(value);
					this.SendPropertyChanging();
					this._notice_Flag = value;
					this.SendPropertyChanged("notice_Flag");
					this.Onnotice_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Resource_tbl_Notice", Storage="_tbl_Resource", ThisKey="notice_Res", OtherKey="res_Id", IsForeignKey=true)]
		public tbl_Resource tbl_Resource
		{
			get
			{
				return this._tbl_Resource.Entity;
			}
			set
			{
				tbl_Resource previousValue = this._tbl_Resource.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Resource.Entity = null;
						previousValue.tbl_Notice.Remove(this);
					}
					this._tbl_Resource.Entity = value;
					if ((value != null))
					{
						value.tbl_Notice.Add(this);
						this._notice_Res = value.res_Id;
					}
					else
					{
						this._notice_Res = default(string);
					}
					this.SendPropertyChanged("tbl_Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Notice", Storage="_tbl_UserAccount", ThisKey="notice_User", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Notice.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Notice.Add(this);
						this._notice_User = value.user_Id;
					}
					else
					{
						this._notice_User = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Resource")]
	public partial class tbl_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _res_Id;
		
		private string _res_Name;
		
		private string _res_Content;
		
		private System.Nullable<float> _res_Size;
		
		private string _res_User;
		
		private string _res_Movie;
		
		private System.Nullable<System.DateTime> _res_Time;
		
		private System.Nullable<int> _res_FavorCount;
		
		private System.Nullable<byte> _res_Type;
		
		private System.Nullable<byte> _res_Status;
		
		private string _res_Note;
		
		private EntitySet<tbl_Notice> _tbl_Notice;
		
		private EntityRef<tbl_Movie> _tbl_Movie;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onres_IdChanging(string value);
    partial void Onres_IdChanged();
    partial void Onres_NameChanging(string value);
    partial void Onres_NameChanged();
    partial void Onres_ContentChanging(string value);
    partial void Onres_ContentChanged();
    partial void Onres_SizeChanging(System.Nullable<float> value);
    partial void Onres_SizeChanged();
    partial void Onres_UserChanging(string value);
    partial void Onres_UserChanged();
    partial void Onres_MovieChanging(string value);
    partial void Onres_MovieChanged();
    partial void Onres_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onres_TimeChanged();
    partial void Onres_FavorCountChanging(System.Nullable<int> value);
    partial void Onres_FavorCountChanged();
    partial void Onres_TypeChanging(System.Nullable<byte> value);
    partial void Onres_TypeChanged();
    partial void Onres_StatusChanging(System.Nullable<byte> value);
    partial void Onres_StatusChanged();
    partial void Onres_NoteChanging(string value);
    partial void Onres_NoteChanged();
    #endregion
		
		public tbl_Resource()
		{
			this._tbl_Notice = new EntitySet<tbl_Notice>(new Action<tbl_Notice>(this.attach_tbl_Notice), new Action<tbl_Notice>(this.detach_tbl_Notice));
			this._tbl_Movie = default(EntityRef<tbl_Movie>);
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string res_Id
		{
			get
			{
				return this._res_Id;
			}
			set
			{
				if ((this._res_Id != value))
				{
					this.Onres_IdChanging(value);
					this.SendPropertyChanging();
					this._res_Id = value;
					this.SendPropertyChanged("res_Id");
					this.Onres_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Name", DbType="NVarChar(MAX)")]
		public string res_Name
		{
			get
			{
				return this._res_Name;
			}
			set
			{
				if ((this._res_Name != value))
				{
					this.Onres_NameChanging(value);
					this.SendPropertyChanging();
					this._res_Name = value;
					this.SendPropertyChanged("res_Name");
					this.Onres_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string res_Content
		{
			get
			{
				return this._res_Content;
			}
			set
			{
				if ((this._res_Content != value))
				{
					this.Onres_ContentChanging(value);
					this.SendPropertyChanging();
					this._res_Content = value;
					this.SendPropertyChanged("res_Content");
					this.Onres_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Size", DbType="Real")]
		public System.Nullable<float> res_Size
		{
			get
			{
				return this._res_Size;
			}
			set
			{
				if ((this._res_Size != value))
				{
					this.Onres_SizeChanging(value);
					this.SendPropertyChanging();
					this._res_Size = value;
					this.SendPropertyChanged("res_Size");
					this.Onres_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_User", DbType="VarChar(50)")]
		public string res_User
		{
			get
			{
				return this._res_User;
			}
			set
			{
				if ((this._res_User != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onres_UserChanging(value);
					this.SendPropertyChanging();
					this._res_User = value;
					this.SendPropertyChanged("res_User");
					this.Onres_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Movie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string res_Movie
		{
			get
			{
				return this._res_Movie;
			}
			set
			{
				if ((this._res_Movie != value))
				{
					if (this._tbl_Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onres_MovieChanging(value);
					this.SendPropertyChanging();
					this._res_Movie = value;
					this.SendPropertyChanged("res_Movie");
					this.Onres_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> res_Time
		{
			get
			{
				return this._res_Time;
			}
			set
			{
				if ((this._res_Time != value))
				{
					this.Onres_TimeChanging(value);
					this.SendPropertyChanging();
					this._res_Time = value;
					this.SendPropertyChanged("res_Time");
					this.Onres_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_FavorCount", DbType="Int")]
		public System.Nullable<int> res_FavorCount
		{
			get
			{
				return this._res_FavorCount;
			}
			set
			{
				if ((this._res_FavorCount != value))
				{
					this.Onres_FavorCountChanging(value);
					this.SendPropertyChanging();
					this._res_FavorCount = value;
					this.SendPropertyChanged("res_FavorCount");
					this.Onres_FavorCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Type", DbType="TinyInt")]
		public System.Nullable<byte> res_Type
		{
			get
			{
				return this._res_Type;
			}
			set
			{
				if ((this._res_Type != value))
				{
					this.Onres_TypeChanging(value);
					this.SendPropertyChanging();
					this._res_Type = value;
					this.SendPropertyChanged("res_Type");
					this.Onres_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Status", DbType="TinyInt")]
		public System.Nullable<byte> res_Status
		{
			get
			{
				return this._res_Status;
			}
			set
			{
				if ((this._res_Status != value))
				{
					this.Onres_StatusChanging(value);
					this.SendPropertyChanging();
					this._res_Status = value;
					this.SendPropertyChanged("res_Status");
					this.Onres_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res_Note", DbType="NVarChar(100)")]
		public string res_Note
		{
			get
			{
				return this._res_Note;
			}
			set
			{
				if ((this._res_Note != value))
				{
					this.Onres_NoteChanging(value);
					this.SendPropertyChanging();
					this._res_Note = value;
					this.SendPropertyChanged("res_Note");
					this.Onres_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Resource_tbl_Notice", Storage="_tbl_Notice", ThisKey="res_Id", OtherKey="notice_Res")]
		public EntitySet<tbl_Notice> tbl_Notice
		{
			get
			{
				return this._tbl_Notice;
			}
			set
			{
				this._tbl_Notice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Resource", Storage="_tbl_Movie", ThisKey="res_Movie", OtherKey="movie_Id", IsForeignKey=true)]
		public tbl_Movie tbl_Movie
		{
			get
			{
				return this._tbl_Movie.Entity;
			}
			set
			{
				tbl_Movie previousValue = this._tbl_Movie.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Movie.Entity = null;
						previousValue.tbl_Resource.Remove(this);
					}
					this._tbl_Movie.Entity = value;
					if ((value != null))
					{
						value.tbl_Resource.Add(this);
						this._res_Movie = value.movie_Id;
					}
					else
					{
						this._res_Movie = default(string);
					}
					this.SendPropertyChanged("tbl_Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Resource", Storage="_tbl_UserAccount", ThisKey="res_User", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Resource.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Resource.Add(this);
						this._res_User = value.user_Id;
					}
					else
					{
						this._res_User = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Notice(tbl_Notice entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Resource = this;
		}
		
		private void detach_tbl_Notice(tbl_Notice entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_UserAccount")]
	public partial class tbl_UserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_Id;
		
		private string _user_Account;
		
		private string _user_Password;
		
		private string _user_EmailAddress;
		
		private string _user_Avatar;
		
		private string _user_Cover;
		
		private System.Nullable<System.DateTime> _user_CreateTime;
		
		private System.Nullable<System.DateTime> _user_AlterTime;
		
		private System.Nullable<bool> _user_IsAdmin;
		
		private EntitySet<tbl_Album> _tbl_Album;
		
		private EntitySet<tbl_Ask> _tbl_Ask;
		
		private EntitySet<tbl_Celebrity> _tbl_Celebrity;
		
		private EntitySet<tbl_Comment> _tbl_Comment;
		
		private EntitySet<tbl_Movie> _tbl_Movie;
		
		private EntitySet<tbl_Notice> _tbl_Notice;
		
		private EntitySet<tbl_Resource> _tbl_Resource;
		
		private EntitySet<tbl_Mark> _tbl_Mark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_IdChanging(string value);
    partial void Onuser_IdChanged();
    partial void Onuser_AccountChanging(string value);
    partial void Onuser_AccountChanged();
    partial void Onuser_PasswordChanging(string value);
    partial void Onuser_PasswordChanged();
    partial void Onuser_EmailAddressChanging(string value);
    partial void Onuser_EmailAddressChanged();
    partial void Onuser_AvatarChanging(string value);
    partial void Onuser_AvatarChanged();
    partial void Onuser_CoverChanging(string value);
    partial void Onuser_CoverChanged();
    partial void Onuser_CreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void Onuser_CreateTimeChanged();
    partial void Onuser_AlterTimeChanging(System.Nullable<System.DateTime> value);
    partial void Onuser_AlterTimeChanged();
    partial void Onuser_IsAdminChanging(System.Nullable<bool> value);
    partial void Onuser_IsAdminChanged();
    #endregion
		
		public tbl_UserAccount()
		{
			this._tbl_Album = new EntitySet<tbl_Album>(new Action<tbl_Album>(this.attach_tbl_Album), new Action<tbl_Album>(this.detach_tbl_Album));
			this._tbl_Ask = new EntitySet<tbl_Ask>(new Action<tbl_Ask>(this.attach_tbl_Ask), new Action<tbl_Ask>(this.detach_tbl_Ask));
			this._tbl_Celebrity = new EntitySet<tbl_Celebrity>(new Action<tbl_Celebrity>(this.attach_tbl_Celebrity), new Action<tbl_Celebrity>(this.detach_tbl_Celebrity));
			this._tbl_Comment = new EntitySet<tbl_Comment>(new Action<tbl_Comment>(this.attach_tbl_Comment), new Action<tbl_Comment>(this.detach_tbl_Comment));
			this._tbl_Movie = new EntitySet<tbl_Movie>(new Action<tbl_Movie>(this.attach_tbl_Movie), new Action<tbl_Movie>(this.detach_tbl_Movie));
			this._tbl_Notice = new EntitySet<tbl_Notice>(new Action<tbl_Notice>(this.attach_tbl_Notice), new Action<tbl_Notice>(this.detach_tbl_Notice));
			this._tbl_Resource = new EntitySet<tbl_Resource>(new Action<tbl_Resource>(this.attach_tbl_Resource), new Action<tbl_Resource>(this.detach_tbl_Resource));
			this._tbl_Mark = new EntitySet<tbl_Mark>(new Action<tbl_Mark>(this.attach_tbl_Mark), new Action<tbl_Mark>(this.detach_tbl_Mark));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_Id
		{
			get
			{
				return this._user_Id;
			}
			set
			{
				if ((this._user_Id != value))
				{
					this.Onuser_IdChanging(value);
					this.SendPropertyChanging();
					this._user_Id = value;
					this.SendPropertyChanged("user_Id");
					this.Onuser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_Account", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string user_Account
		{
			get
			{
				return this._user_Account;
			}
			set
			{
				if ((this._user_Account != value))
				{
					this.Onuser_AccountChanging(value);
					this.SendPropertyChanging();
					this._user_Account = value;
					this.SendPropertyChanged("user_Account");
					this.Onuser_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string user_Password
		{
			get
			{
				return this._user_Password;
			}
			set
			{
				if ((this._user_Password != value))
				{
					this.Onuser_PasswordChanging(value);
					this.SendPropertyChanging();
					this._user_Password = value;
					this.SendPropertyChanged("user_Password");
					this.Onuser_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_EmailAddress", DbType="NVarChar(50)")]
		public string user_EmailAddress
		{
			get
			{
				return this._user_EmailAddress;
			}
			set
			{
				if ((this._user_EmailAddress != value))
				{
					this.Onuser_EmailAddressChanging(value);
					this.SendPropertyChanging();
					this._user_EmailAddress = value;
					this.SendPropertyChanged("user_EmailAddress");
					this.Onuser_EmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_Avatar", DbType="NVarChar(100)")]
		public string user_Avatar
		{
			get
			{
				return this._user_Avatar;
			}
			set
			{
				if ((this._user_Avatar != value))
				{
					this.Onuser_AvatarChanging(value);
					this.SendPropertyChanging();
					this._user_Avatar = value;
					this.SendPropertyChanged("user_Avatar");
					this.Onuser_AvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_Cover", DbType="NVarChar(100)")]
		public string user_Cover
		{
			get
			{
				return this._user_Cover;
			}
			set
			{
				if ((this._user_Cover != value))
				{
					this.Onuser_CoverChanging(value);
					this.SendPropertyChanging();
					this._user_Cover = value;
					this.SendPropertyChanged("user_Cover");
					this.Onuser_CoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> user_CreateTime
		{
			get
			{
				return this._user_CreateTime;
			}
			set
			{
				if ((this._user_CreateTime != value))
				{
					this.Onuser_CreateTimeChanging(value);
					this.SendPropertyChanging();
					this._user_CreateTime = value;
					this.SendPropertyChanged("user_CreateTime");
					this.Onuser_CreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_AlterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> user_AlterTime
		{
			get
			{
				return this._user_AlterTime;
			}
			set
			{
				if ((this._user_AlterTime != value))
				{
					this.Onuser_AlterTimeChanging(value);
					this.SendPropertyChanging();
					this._user_AlterTime = value;
					this.SendPropertyChanged("user_AlterTime");
					this.Onuser_AlterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_IsAdmin", DbType="Bit")]
		public System.Nullable<bool> user_IsAdmin
		{
			get
			{
				return this._user_IsAdmin;
			}
			set
			{
				if ((this._user_IsAdmin != value))
				{
					this.Onuser_IsAdminChanging(value);
					this.SendPropertyChanging();
					this._user_IsAdmin = value;
					this.SendPropertyChanged("user_IsAdmin");
					this.Onuser_IsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Album", Storage="_tbl_Album", ThisKey="user_Id", OtherKey="album_User")]
		public EntitySet<tbl_Album> tbl_Album
		{
			get
			{
				return this._tbl_Album;
			}
			set
			{
				this._tbl_Album.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Ask", Storage="_tbl_Ask", ThisKey="user_Id", OtherKey="ask_User")]
		public EntitySet<tbl_Ask> tbl_Ask
		{
			get
			{
				return this._tbl_Ask;
			}
			set
			{
				this._tbl_Ask.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Celebrity", Storage="_tbl_Celebrity", ThisKey="user_Id", OtherKey="celeb_Create")]
		public EntitySet<tbl_Celebrity> tbl_Celebrity
		{
			get
			{
				return this._tbl_Celebrity;
			}
			set
			{
				this._tbl_Celebrity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Comment", Storage="_tbl_Comment", ThisKey="user_Id", OtherKey="cmt_User")]
		public EntitySet<tbl_Comment> tbl_Comment
		{
			get
			{
				return this._tbl_Comment;
			}
			set
			{
				this._tbl_Comment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Movie", Storage="_tbl_Movie", ThisKey="user_Id", OtherKey="movie_Create")]
		public EntitySet<tbl_Movie> tbl_Movie
		{
			get
			{
				return this._tbl_Movie;
			}
			set
			{
				this._tbl_Movie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Notice", Storage="_tbl_Notice", ThisKey="user_Id", OtherKey="notice_User")]
		public EntitySet<tbl_Notice> tbl_Notice
		{
			get
			{
				return this._tbl_Notice;
			}
			set
			{
				this._tbl_Notice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Resource", Storage="_tbl_Resource", ThisKey="user_Id", OtherKey="res_User")]
		public EntitySet<tbl_Resource> tbl_Resource
		{
			get
			{
				return this._tbl_Resource;
			}
			set
			{
				this._tbl_Resource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Mark", Storage="_tbl_Mark", ThisKey="user_Id", OtherKey="mark_User")]
		public EntitySet<tbl_Mark> tbl_Mark
		{
			get
			{
				return this._tbl_Mark;
			}
			set
			{
				this._tbl_Mark.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Album(tbl_Album entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Album(tbl_Album entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Ask(tbl_Ask entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Ask(tbl_Ask entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Celebrity(tbl_Celebrity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Celebrity(tbl_Celebrity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Comment(tbl_Comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Comment(tbl_Comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Movie(tbl_Movie entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Movie(tbl_Movie entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Notice(tbl_Notice entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Notice(tbl_Notice entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Resource(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Resource(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
		
		private void attach_tbl_Mark(tbl_Mark entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = this;
		}
		
		private void detach_tbl_Mark(tbl_Mark entity)
		{
			this.SendPropertyChanging();
			entity.tbl_UserAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Work")]
	public partial class tbl_Work : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _work_Id;
		
		private string _work_Movie;
		
		private string _work_Celeb;
		
		private System.Nullable<byte> _work_Type;
		
		private EntityRef<tbl_Celebrity> _tbl_Celebrity;
		
		private EntityRef<tbl_Movie> _tbl_Movie;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwork_IdChanging(string value);
    partial void Onwork_IdChanged();
    partial void Onwork_MovieChanging(string value);
    partial void Onwork_MovieChanged();
    partial void Onwork_CelebChanging(string value);
    partial void Onwork_CelebChanged();
    partial void Onwork_TypeChanging(System.Nullable<byte> value);
    partial void Onwork_TypeChanged();
    #endregion
		
		public tbl_Work()
		{
			this._tbl_Celebrity = default(EntityRef<tbl_Celebrity>);
			this._tbl_Movie = default(EntityRef<tbl_Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_work_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string work_Id
		{
			get
			{
				return this._work_Id;
			}
			set
			{
				if ((this._work_Id != value))
				{
					this.Onwork_IdChanging(value);
					this.SendPropertyChanging();
					this._work_Id = value;
					this.SendPropertyChanged("work_Id");
					this.Onwork_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_work_Movie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string work_Movie
		{
			get
			{
				return this._work_Movie;
			}
			set
			{
				if ((this._work_Movie != value))
				{
					if (this._tbl_Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwork_MovieChanging(value);
					this.SendPropertyChanging();
					this._work_Movie = value;
					this.SendPropertyChanged("work_Movie");
					this.Onwork_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_work_Celeb", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string work_Celeb
		{
			get
			{
				return this._work_Celeb;
			}
			set
			{
				if ((this._work_Celeb != value))
				{
					if (this._tbl_Celebrity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwork_CelebChanging(value);
					this.SendPropertyChanging();
					this._work_Celeb = value;
					this.SendPropertyChanged("work_Celeb");
					this.Onwork_CelebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_work_Type", DbType="TinyInt")]
		public System.Nullable<byte> work_Type
		{
			get
			{
				return this._work_Type;
			}
			set
			{
				if ((this._work_Type != value))
				{
					this.Onwork_TypeChanging(value);
					this.SendPropertyChanging();
					this._work_Type = value;
					this.SendPropertyChanged("work_Type");
					this.Onwork_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Celebrity_tbl_Work", Storage="_tbl_Celebrity", ThisKey="work_Celeb", OtherKey="celeb_Id", IsForeignKey=true)]
		public tbl_Celebrity tbl_Celebrity
		{
			get
			{
				return this._tbl_Celebrity.Entity;
			}
			set
			{
				tbl_Celebrity previousValue = this._tbl_Celebrity.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Celebrity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Celebrity.Entity = null;
						previousValue.tbl_Work.Remove(this);
					}
					this._tbl_Celebrity.Entity = value;
					if ((value != null))
					{
						value.tbl_Work.Add(this);
						this._work_Celeb = value.celeb_Id;
					}
					else
					{
						this._work_Celeb = default(string);
					}
					this.SendPropertyChanged("tbl_Celebrity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Movie_tbl_Work", Storage="_tbl_Movie", ThisKey="work_Movie", OtherKey="movie_Id", IsForeignKey=true)]
		public tbl_Movie tbl_Movie
		{
			get
			{
				return this._tbl_Movie.Entity;
			}
			set
			{
				tbl_Movie previousValue = this._tbl_Movie.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Movie.Entity = null;
						previousValue.tbl_Work.Remove(this);
					}
					this._tbl_Movie.Entity = value;
					if ((value != null))
					{
						value.tbl_Work.Add(this);
						this._work_Movie = value.movie_Id;
					}
					else
					{
						this._work_Movie = default(string);
					}
					this.SendPropertyChanged("tbl_Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Mark")]
	public partial class tbl_Mark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mark_Id;
		
		private byte _mark_Type;
		
		private string _mark_User;
		
		private string _mark_Target;
		
		private System.Nullable<System.DateTime> _mark_Time;
		
		private EntityRef<tbl_UserAccount> _tbl_UserAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmark_IdChanging(string value);
    partial void Onmark_IdChanged();
    partial void Onmark_TypeChanging(byte value);
    partial void Onmark_TypeChanged();
    partial void Onmark_UserChanging(string value);
    partial void Onmark_UserChanged();
    partial void Onmark_TargetChanging(string value);
    partial void Onmark_TargetChanged();
    partial void Onmark_TimeChanging(System.Nullable<System.DateTime> value);
    partial void Onmark_TimeChanged();
    #endregion
		
		public tbl_Mark()
		{
			this._tbl_UserAccount = default(EntityRef<tbl_UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mark_Id
		{
			get
			{
				return this._mark_Id;
			}
			set
			{
				if ((this._mark_Id != value))
				{
					this.Onmark_IdChanging(value);
					this.SendPropertyChanging();
					this._mark_Id = value;
					this.SendPropertyChanged("mark_Id");
					this.Onmark_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark_Type", DbType="TinyInt NOT NULL")]
		public byte mark_Type
		{
			get
			{
				return this._mark_Type;
			}
			set
			{
				if ((this._mark_Type != value))
				{
					this.Onmark_TypeChanging(value);
					this.SendPropertyChanging();
					this._mark_Type = value;
					this.SendPropertyChanged("mark_Type");
					this.Onmark_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark_User", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mark_User
		{
			get
			{
				return this._mark_User;
			}
			set
			{
				if ((this._mark_User != value))
				{
					if (this._tbl_UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmark_UserChanging(value);
					this.SendPropertyChanging();
					this._mark_User = value;
					this.SendPropertyChanged("mark_User");
					this.Onmark_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark_Target", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mark_Target
		{
			get
			{
				return this._mark_Target;
			}
			set
			{
				if ((this._mark_Target != value))
				{
					this.Onmark_TargetChanging(value);
					this.SendPropertyChanging();
					this._mark_Target = value;
					this.SendPropertyChanged("mark_Target");
					this.Onmark_TargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> mark_Time
		{
			get
			{
				return this._mark_Time;
			}
			set
			{
				if ((this._mark_Time != value))
				{
					this.Onmark_TimeChanging(value);
					this.SendPropertyChanging();
					this._mark_Time = value;
					this.SendPropertyChanged("mark_Time");
					this.Onmark_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_UserAccount_tbl_Mark", Storage="_tbl_UserAccount", ThisKey="mark_User", OtherKey="user_Id", IsForeignKey=true)]
		public tbl_UserAccount tbl_UserAccount
		{
			get
			{
				return this._tbl_UserAccount.Entity;
			}
			set
			{
				tbl_UserAccount previousValue = this._tbl_UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_UserAccount.Entity = null;
						previousValue.tbl_Mark.Remove(this);
					}
					this._tbl_UserAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Mark.Add(this);
						this._mark_User = value.user_Id;
					}
					else
					{
						this._mark_User = default(string);
					}
					this.SendPropertyChanged("tbl_UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
